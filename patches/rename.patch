--- a/rename	2010-04-11 22:52:16.000000000 +0000
+++ b/rename	2010-05-22 22:43:43.000000000 +0000
@@ -33,14 +33,16 @@
 
 use Getopt::Long;
 Getopt::Long::Configure('bundling');
+use File::Copy "mv";
 
-my ($verbose, $no_act, $force, $op);
+my ($verbose, $no_act, $force, $op, $move);
 
-die "Usage: rename [-v] [-n] [-f] perlexpr [filenames]\n"
+die "Usage: rename [-v] [-n] [-f] [-m] perlexpr [filenames]\n"
     unless GetOptions(
-	'v|verbose' => \$verbose,
-	'n|no-act'  => \$no_act,
-	'f|force'   => \$force,
+	'v|verbose' => \$verbose,	# verbose
+	'n|no-act'  => \$no_act,	# does nothing (prints what would)
+	'm|move'  => \$move,		# does move intead of rename
+	'f|force'   => \$force,		# overwrite existing
     ) and $op = shift;
 
 $verbose++ if $no_act;
@@ -51,6 +53,11 @@
     chop(@ARGV);
 }
 
+sub xrename($$) {
+	return rename($_[0], $_[1]) unless $move;
+	return mv($_[0], $_[1]);
+}
+
 for (@ARGV) {
     my $was = $_;
     eval $op;
@@ -60,7 +67,7 @@
     {
 	warn  "$was not renamed: $_ already exists\n";
     }
-    elsif ($no_act or rename $was, $_)
+    elsif ($no_act or xrename($was, $_))
     {
 	print "$was renamed as $_\n" if $verbose;
     }
@@ -78,7 +85,7 @@
 
 =head1 SYNOPSIS
 
-B<rename> S<[ B<-v> ]> S<[ B<-n> ]> S<[ B<-f> ]> I<perlexpr> S<[ I<files> ]>
+B<rename> S<[ B<-v> ]> S<[ B<-n> ]> S<[ B<-f> ]> S<[ B<-m> ]> I<perlexpr> S<[ I<files> ]>
 
 =head1 DESCRIPTION
 
@@ -118,6 +125,10 @@
 
 Force: overwrite existing files.
 
+=item B<-m>, B<--move>
+
+Move files instead of renaming (works across device boundaries)
+
 =back
 
 =head1 ENVIRONMENT
